<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_s_o_d_a" kind="class" prot="public">
    <compoundname>SODA</compoundname>
    <includes refid="_s_o_d_a_8h" local="no">SODA.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_o_d_a_1a13d150b013fa66bc2f181dcfa7a1f0a2" prot="private" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char SODA::standby</definition>
        <argsstring></argsstring>
        <name>standby</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="72" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_s_o_d_a_1af8706c3bd9847ccfc679bd403b21f91e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SODA::bcdtodec</definition>
        <argsstring>(int val)</argsstring>
        <name>bcdtodec</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="69" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a8a097eefc2f44317c8f1eb0ba81ef088" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SODA::dectobcd</definition>
        <argsstring>(int val)</argsstring>
        <name>dectobcd</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="68" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a03d84d407029febb5d01d1cee1592a92" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char SODA::getAddress</definition>
        <argsstring>(uint8_t, uint8_t)</argsstring>
        <name>getAddress</name>
        <param>
          <type>uint8_t</type>
          <defname>device</defname>
        </param>
        <param>
          <type>uint8_t</type>
          <defname>addr</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="67" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="36" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1aa5d41737ea0ccc85664ee30b9461113c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::parseCommand</definition>
        <argsstring>(char)</argsstring>
        <name>parseCommand</name>
        <param>
          <type>char</type>
          <defname>command</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="71" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="506" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1abde23434d6707bcd97e66642a7d2f43d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::runSD</definition>
        <argsstring>(int)</argsstring>
        <name>runSD</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a1d5cb0c5316f2c25339de6c3c82952f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::setAddress</definition>
        <argsstring>(uint8_t, uint8_t, uint8_t)</argsstring>
        <name>setAddress</name>
        <param>
          <type>uint8_t</type>
          <defname>device</defname>
        </param>
        <param>
          <type>uint8_t</type>
          <defname>addr</defname>
        </param>
        <param>
          <type>uint8_t</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="66" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="27" bodyend="33"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_o_d_a_1a30b86308dcb295c5e86b79049d3bafdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long SODA::adcRead</definition>
        <argsstring>(int ch, int bit, int gain)</argsstring>
        <name>adcRead</name>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a reading from the MCP3424 18-bit analog-digital converter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>an int argument specifying channel 1, 2, 3, or 4. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bit</parametername>
</parameternamelist>
<parameterdescription>
<para>an int argument specifying the bit encoding 1 = 12, 2=14, 3=16, 4=18 bits. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gain</parametername>
</parameternamelist>
<parameterdescription>
<para>as in argument specifying the level of gain from the programmable gain amplifier 1 = x1, 2 = x2, 3 = x4, 4 = x8. The return value is adjusted for gain so that a signal of 100 nV with gain = 4 will return a reading of 100 nV. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>long ADC value in nanoVolts (1 * 10^-9 volts). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="164" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="291" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a95ec5e2456f6402478c101dad0b735ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes an instance of the <ref refid="class_s_o_d_a" kindref="compound">SODA</ref> class. Should be called in each sketch before any other <ref refid="class_s_o_d_a" kindref="compound">SODA</ref> functions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="80" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="16" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1af1752112fc06931fa9634f48cf65e420" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::blinks</definition>
        <argsstring>(int n)</argsstring>
        <name>blinks</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Blinks the led connected to pin 13. Used for simple communications such as to show when a process in under way or finished. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>an int that sets the number of times to blink. Each blink = 100 ms on, 100 ms off. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="271" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="556" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a93c1adcc876e1681db69d992153ffb28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::bufferTime</definition>
        <argsstring>()</argsstring>
        <name>bufferTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Loads the timeArray into a formatted character buffer. Format = YYYY-MM-DD HH:MM:SS <simplesect kind="see"><para><ref refid="class_s_o_d_a_1a126e337a85ae2ff4380d738d8d55ed64" kindref="member">getTime()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="116" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="131" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a9cca81f7fda16982cc1eb4030774425b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SODA::checkTime</definition>
        <argsstring>(int place)</argsstring>
        <name>checkTime</name>
        <param>
          <type>int</type>
          <declname>place</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an int value from the timeArray. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>place</parametername>
</parameternamelist>
<parameterdescription>
<para>an int specifying the place in the time array (0 = year, 1 = month, 2 = day, 3 = hour, 4 = minute, 5 = second). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_s_o_d_a_1a69b626b4dfd0847a1d9452ce8faba28e" kindref="member">setTime()</ref> </para><simplesectsep/><para><ref refid="class_s_o_d_a_1a17bd73a287665e022f8e955db65618b8" kindref="member">updateTime()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="97" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="186" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a15a8c710209fd041f14bb448fd17c9b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::communicate</definition>
        <argsstring>()</argsstring>
        <name>communicate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handles communication between the <ref refid="class_s_o_d_a" kindref="compound">SODA</ref> and a computer/tablet through the serial monitor. Commands are sent through a serial connection using the format [XMORE_INFO] where X is a one-character command and MORE_INFO are optional, additional characters used to complete some commands such as setting the clock. current commands are: [D] downloads the logger file on the sd card</para><para>[I] return the logger_id</para><para>[R] runs through the sketch and normally ouputs a line of current readings to the serial connection.</para><para>[t] prints the current clock time to the serial connection</para><para>[TYYYY-MM-DD HH:MM:SS] sets the clock time <simplesect kind="see"><para><ref refid="class_s_o_d_a_1a8cd44297bace9494ed073fec5ebfe13a" kindref="member">dataLineBegin()</ref> </para><simplesectsep/><para><ref refid="class_s_o_d_a_1a00647a29fb7b491d5e455b8b099da5e0" kindref="member">dataLineAdd()</ref> </para><simplesectsep/><para><ref refid="class_s_o_d_a_1a3bdf9101301e2781fe899cb52a59820b" kindref="member">dataLineEnd()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>set standby so the clock will be reset properly </para>        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="245" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="473" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a6a65882362bba508fbc8c0d5e45badc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::dataDownload</definition>
        <argsstring>()</argsstring>
        <name>dataDownload</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads the contents of the data file from the SD card and streams it through the serial connection. The name of the file is set using #define filename definition at the top of <ref refid="_s_o_d_a_8h" kindref="compound">SODA.h</ref>. <simplesect kind="see"><para><ref refid="class_s_o_d_a_1a8cd44297bace9494ed073fec5ebfe13a" kindref="member">dataLineBegin()</ref> </para><simplesectsep/><para><ref refid="class_s_o_d_a_1a00647a29fb7b491d5e455b8b099da5e0" kindref="member">dataLineAdd()</ref> </para><simplesectsep/><para><ref refid="class_s_o_d_a_1a3bdf9101301e2781fe899cb52a59820b" kindref="member">dataLineEnd()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="225" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="454" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a00647a29fb7b491d5e455b8b099da5e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::dataLineAdd</definition>
        <argsstring>(int value)</argsstring>
        <name>dataLineAdd</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds an int value to the current data line. A comma is placed before the value. param value an int value <simplesect kind="see"><para><ref refid="class_s_o_d_a_1a8cd44297bace9494ed073fec5ebfe13a" kindref="member">dataLineBegin()</ref> </para><simplesectsep/><para><ref refid="class_s_o_d_a_1a3bdf9101301e2781fe899cb52a59820b" kindref="member">dataLineEnd()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="197" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="401" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a1c38451ceb71b3e644eb16c11fcfacd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::dataLineAdd</definition>
        <argsstring>(long value)</argsstring>
        <name>dataLineAdd</name>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a long value to the current data line. A comma is placed before the value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>an int value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_s_o_d_a_1a8cd44297bace9494ed073fec5ebfe13a" kindref="member">dataLineBegin()</ref> </para><simplesectsep/><para><ref refid="class_s_o_d_a_1a3bdf9101301e2781fe899cb52a59820b" kindref="member">dataLineEnd()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="204" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="414" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1aa5263a65ba6929e23c85bc0d47bbae32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::dataLineAdd</definition>
        <argsstring>(float value)</argsstring>
        <name>dataLineAdd</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a float value to the current data line. A comma is placed before the value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>an int value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_s_o_d_a_1a8cd44297bace9494ed073fec5ebfe13a" kindref="member">dataLineBegin()</ref> </para><simplesectsep/><para><ref refid="class_s_o_d_a_1a3bdf9101301e2781fe899cb52a59820b" kindref="member">dataLineEnd()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="211" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="427" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a8cd44297bace9494ed073fec5ebfe13a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::dataLineBegin</definition>
        <argsstring>()</argsstring>
        <name>dataLineBegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Begins a new dataline and writes the loggerid and current time separated by a comma. The clock is read by the functions so there&apos;s no need to make a seperate call to <ref refid="class_s_o_d_a_1a126e337a85ae2ff4380d738d8d55ed64" kindref="member">getTime()</ref>. The function typically begins writing the line to the SD card. If the USB cable is connected it instead writes to the serial monitor. If writing to the SD card, the file is opened and left open until a call to <ref refid="class_s_o_d_a_1a3bdf9101301e2781fe899cb52a59820b" kindref="member">dataLineEnd()</ref>. <simplesect kind="see"><para><ref refid="class_s_o_d_a_1a00647a29fb7b491d5e455b8b099da5e0" kindref="member">dataLineAdd()</ref> </para><simplesectsep/><para><ref refid="class_s_o_d_a_1a3bdf9101301e2781fe899cb52a59820b" kindref="member">dataLineEnd()</ref> </para><simplesectsep/><para><ref refid="class_s_o_d_a_1a01ecfd6c2f14d0f5507a4384b34fb46a" kindref="member">getID()</ref> </para><simplesectsep/><para><ref refid="class_s_o_d_a_1a126e337a85ae2ff4380d738d8d55ed64" kindref="member">getTime()</ref> </para><simplesectsep/><para><ref refid="class_s_o_d_a_1aa79b275be71dbfd5662608add4715b87" kindref="member">setID()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="190" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="384" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a3bdf9101301e2781fe899cb52a59820b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::dataLineEnd</definition>
        <argsstring>()</argsstring>
        <name>dataLineEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Terminates a data line. Adds a carriage return/line feed to the end of the data line and, if writing to the SD card, then closes the file. <simplesect kind="see"><para><ref refid="class_s_o_d_a_1a8cd44297bace9494ed073fec5ebfe13a" kindref="member">dataLineBegin()</ref> </para><simplesectsep/><para><ref refid="class_s_o_d_a_1a00647a29fb7b491d5e455b8b099da5e0" kindref="member">dataLineAdd()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="217" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="439" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1abce8c3a638c71d842ab79af3120138c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float SODA::getClockTemp</definition>
        <argsstring>()</argsstring>
        <name>getClockTemp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the value from the internal temperature sensor in the DS3231 real time clock. <simplesect kind="return"><para>temperature in Celsius as float </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="128" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="192" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a01ecfd6c2f14d0f5507a4384b34fb46a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long SODA::getID</definition>
        <argsstring>()</argsstring>
        <name>getID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the logger ID stored in microcontroller&apos;s EEPROM. <simplesect kind="return"><para>ID a long integer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="257" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="541" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a98719fd95cb6fd3c70f221e62dbf06f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SODA::getStandby</definition>
        <argsstring>()</argsstring>
        <name>getStandby</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the standby variable that&apos;s used to indicate whether the logger is in logging or communication mode. <simplesect kind="return"><para>standby as unsigned char </para></simplesect>
<simplesect kind="see"><para><ref refid="class_s_o_d_a_1aa78eec946be2a371ae844fa44f6e4d96" kindref="member">setStandby</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="153" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="280" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a126e337a85ae2ff4380d738d8d55ed64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::getTime</definition>
        <argsstring>()</argsstring>
        <name>getTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Loads the time from the clock to the timeArray. (0 = year, 1 = month, 2 = day, 3 = hour, 4 = minute, 5 = second). <simplesect kind="see"><para><ref refid="class_s_o_d_a_1a69b626b4dfd0847a1d9452ce8faba28e" kindref="member">setTime()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="110" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="98" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1af1e78fa91c8cb363a93320acaacf0e7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::printBuffer</definition>
        <argsstring>()</argsstring>
        <name>printBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prints the contents of the buffer[] array, usually a formatted time stamp. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="261" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1abac684bb54a9d346337b6e0ed9243e40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::serialSetTime</definition>
        <argsstring>()</argsstring>
        <name>serialSetTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the clock based on input from the Serial connection. Serial data are first saved to the buffer[] array and then loaded to the timeArray before being sent to the clock. Serial data format = &apos;YYYY-MM-DD HH:MM:SS&apos;. <simplesect kind="see"><para><ref refid="class_s_o_d_a_1a69b626b4dfd0847a1d9452ce8faba28e" kindref="member">setTime()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="123" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="158" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1aa79b275be71dbfd5662608add4715b87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::setID</definition>
        <argsstring>(long ID)</argsstring>
        <name>setID</name>
        <param>
          <type>long</type>
          <declname>ID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes an logger ID number as a long value to the microcontroller&apos;s EEPROM (address 0 to 3). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ID</parametername>
</parameternamelist>
<parameterdescription>
<para>a long value to be used as the logger ID </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="252" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="534" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1aa78eec946be2a371ae844fa44f6e4d96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::setStandby</definition>
        <argsstring>(unsigned char val)</argsstring>
        <name>setStandby</name>
        <param>
          <type>unsigned char</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the standby variable to indicate whether the logger is in logging or communication mode. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>unsigned char </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_s_o_d_a_1a98719fd95cb6fd3c70f221e62dbf06f4" kindref="member">getStandby</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="147" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="261" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a69b626b4dfd0847a1d9452ce8faba28e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::setTime</definition>
        <argsstring>()</argsstring>
        <name>setTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resets the time in the clock to the values from timeArray. <simplesect kind="see"><para><ref refid="class_s_o_d_a_1a9cca81f7fda16982cc1eb4030774425b" kindref="member">checkTime()</ref> </para><simplesectsep/><para><ref refid="class_s_o_d_a_1a126e337a85ae2ff4380d738d8d55ed64" kindref="member">getTime()</ref> </para><simplesectsep/><para><ref refid="class_s_o_d_a_1a17bd73a287665e022f8e955db65618b8" kindref="member">updateTime()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="104" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="68" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a6acf21ab1e6db2b8861715e8a5a7f37f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::setWake</definition>
        <argsstring>(int val, int valType)</argsstring>
        <name>setWake</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>valType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the clock alarm. Used to wake up the logger and begin a new measurement. Example: setWake(10,2); sets the alarm to the next 10 minute interval. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>an int time value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valType</parametername>
</parameternamelist>
<parameterdescription>
<para>an int indicating the units of time 1= secs, 2 = mins, 3=hours. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_s_o_d_a_1a135382c3d907496f74c852965b31ffdd" kindref="member">turnOff</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="136" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="212" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a55eaa23fbeb729b6d348a0d6c4e3c9b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SODA::smoothAnalogRead</definition>
        <argsstring>(int pin1)</argsstring>
        <name>smoothAnalogRead</name>
        <param>
          <type>int</type>
          <declname>pin1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An improved version of analogRead that reduces noise in the measurement <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pin1</parametername>
</parameternamelist>
<parameterdescription>
<para>pin number to make reading </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an int value of the average reading (between 0 and 1023). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="176" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="366" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a1f1aa095370775ed2d94ca6d842ff213" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SODA::tcReadK</definition>
        <argsstring>(int ch)</argsstring>
        <name>tcReadK</name>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a temperature reading from a type K themocouple. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>an int argument specifying ADC channel 1,2,3, or 4 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a int value of temperature in degrees C. Int is used instead of a float since the precision of the measurement cannot realistically support decimal numbers. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="170" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="334" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a135382c3d907496f74c852965b31ffdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::turnOff</definition>
        <argsstring>()</argsstring>
        <name>turnOff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Turns of the datalogger board by resetting the clock alarm pin, thereby shuttting off the voltage regulator. <simplesect kind="see"><para><ref refid="class_s_o_d_a_1a6acf21ab1e6db2b8861715e8a5a7f37f" kindref="member">setWake()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="141" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="251" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a17bd73a287665e022f8e955db65618b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SODA::updateTime</definition>
        <argsstring>(int val, int place)</argsstring>
        <name>updateTime</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>place</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Updates the time array. Need to run setTime to send time array to clock. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>an int time values. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>place</parametername>
</parameternamelist>
<parameterdescription>
<para>an int specifying the place in the time array (0 = year, 1 = month, 2 = day, 3 = hour, 4 = minute, 5 = second). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_s_o_d_a_1a69b626b4dfd0847a1d9452ce8faba28e" kindref="member">setTime()</ref> </para><simplesectsep/><para>getTIme() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="90" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="class_s_o_d_a_1a5ef9772aba25fe5b19bc0d647d8c899a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SODA::usbConnected</definition>
        <argsstring>()</argsstring>
        <name>usbConnected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tests to see if the USB is connected. A USB connection causes pin 0 of the microcontroller to read as a digital high. <simplesect kind="return"><para>boolean values where connected = true, not connected = false. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="266" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="551" bodyend="553"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A class to handle basic datalogging functions using Olympia Circuit&apos;s <ref refid="class_s_o_d_a" kindref="compound">SODA</ref> HE 1.0 Arduino-compatible board. </para>    </detaileddescription>
    <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" line="64" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.h" bodystart="63" bodyend="272"/>
    <listofallmembers>
      <member refid="class_s_o_d_a_1a30b86308dcb295c5e86b79049d3bafdd" prot="public" virt="non-virtual"><scope>SODA</scope><name>adcRead</name></member>
      <member refid="class_s_o_d_a_1af8706c3bd9847ccfc679bd403b21f91e" prot="private" virt="non-virtual"><scope>SODA</scope><name>bcdtodec</name></member>
      <member refid="class_s_o_d_a_1a95ec5e2456f6402478c101dad0b735ce" prot="public" virt="non-virtual"><scope>SODA</scope><name>begin</name></member>
      <member refid="class_s_o_d_a_1af1752112fc06931fa9634f48cf65e420" prot="public" virt="non-virtual"><scope>SODA</scope><name>blinks</name></member>
      <member refid="class_s_o_d_a_1a93c1adcc876e1681db69d992153ffb28" prot="public" virt="non-virtual"><scope>SODA</scope><name>bufferTime</name></member>
      <member refid="class_s_o_d_a_1a9cca81f7fda16982cc1eb4030774425b" prot="public" virt="non-virtual"><scope>SODA</scope><name>checkTime</name></member>
      <member refid="class_s_o_d_a_1a15a8c710209fd041f14bb448fd17c9b2" prot="public" virt="non-virtual"><scope>SODA</scope><name>communicate</name></member>
      <member refid="class_s_o_d_a_1a6a65882362bba508fbc8c0d5e45badc1" prot="public" virt="non-virtual"><scope>SODA</scope><name>dataDownload</name></member>
      <member refid="class_s_o_d_a_1a00647a29fb7b491d5e455b8b099da5e0" prot="public" virt="non-virtual"><scope>SODA</scope><name>dataLineAdd</name></member>
      <member refid="class_s_o_d_a_1a1c38451ceb71b3e644eb16c11fcfacd7" prot="public" virt="non-virtual"><scope>SODA</scope><name>dataLineAdd</name></member>
      <member refid="class_s_o_d_a_1aa5263a65ba6929e23c85bc0d47bbae32" prot="public" virt="non-virtual"><scope>SODA</scope><name>dataLineAdd</name></member>
      <member refid="class_s_o_d_a_1a8cd44297bace9494ed073fec5ebfe13a" prot="public" virt="non-virtual"><scope>SODA</scope><name>dataLineBegin</name></member>
      <member refid="class_s_o_d_a_1a3bdf9101301e2781fe899cb52a59820b" prot="public" virt="non-virtual"><scope>SODA</scope><name>dataLineEnd</name></member>
      <member refid="class_s_o_d_a_1a8a097eefc2f44317c8f1eb0ba81ef088" prot="private" virt="non-virtual"><scope>SODA</scope><name>dectobcd</name></member>
      <member refid="class_s_o_d_a_1a03d84d407029febb5d01d1cee1592a92" prot="private" virt="non-virtual"><scope>SODA</scope><name>getAddress</name></member>
      <member refid="class_s_o_d_a_1abce8c3a638c71d842ab79af3120138c5" prot="public" virt="non-virtual"><scope>SODA</scope><name>getClockTemp</name></member>
      <member refid="class_s_o_d_a_1a01ecfd6c2f14d0f5507a4384b34fb46a" prot="public" virt="non-virtual"><scope>SODA</scope><name>getID</name></member>
      <member refid="class_s_o_d_a_1a98719fd95cb6fd3c70f221e62dbf06f4" prot="public" virt="non-virtual"><scope>SODA</scope><name>getStandby</name></member>
      <member refid="class_s_o_d_a_1a126e337a85ae2ff4380d738d8d55ed64" prot="public" virt="non-virtual"><scope>SODA</scope><name>getTime</name></member>
      <member refid="class_s_o_d_a_1aa5d41737ea0ccc85664ee30b9461113c" prot="private" virt="non-virtual"><scope>SODA</scope><name>parseCommand</name></member>
      <member refid="class_s_o_d_a_1af1e78fa91c8cb363a93320acaacf0e7f" prot="public" virt="non-virtual"><scope>SODA</scope><name>printBuffer</name></member>
      <member refid="class_s_o_d_a_1abde23434d6707bcd97e66642a7d2f43d" prot="private" virt="non-virtual"><scope>SODA</scope><name>runSD</name></member>
      <member refid="class_s_o_d_a_1abac684bb54a9d346337b6e0ed9243e40" prot="public" virt="non-virtual"><scope>SODA</scope><name>serialSetTime</name></member>
      <member refid="class_s_o_d_a_1a1d5cb0c5316f2c25339de6c3c82952f1" prot="private" virt="non-virtual"><scope>SODA</scope><name>setAddress</name></member>
      <member refid="class_s_o_d_a_1aa79b275be71dbfd5662608add4715b87" prot="public" virt="non-virtual"><scope>SODA</scope><name>setID</name></member>
      <member refid="class_s_o_d_a_1aa78eec946be2a371ae844fa44f6e4d96" prot="public" virt="non-virtual"><scope>SODA</scope><name>setStandby</name></member>
      <member refid="class_s_o_d_a_1a69b626b4dfd0847a1d9452ce8faba28e" prot="public" virt="non-virtual"><scope>SODA</scope><name>setTime</name></member>
      <member refid="class_s_o_d_a_1a6acf21ab1e6db2b8861715e8a5a7f37f" prot="public" virt="non-virtual"><scope>SODA</scope><name>setWake</name></member>
      <member refid="class_s_o_d_a_1a55eaa23fbeb729b6d348a0d6c4e3c9b3" prot="public" virt="non-virtual"><scope>SODA</scope><name>smoothAnalogRead</name></member>
      <member refid="class_s_o_d_a_1a13d150b013fa66bc2f181dcfa7a1f0a2" prot="private" virt="non-virtual"><scope>SODA</scope><name>standby</name></member>
      <member refid="class_s_o_d_a_1a1f1aa095370775ed2d94ca6d842ff213" prot="public" virt="non-virtual"><scope>SODA</scope><name>tcReadK</name></member>
      <member refid="class_s_o_d_a_1a135382c3d907496f74c852965b31ffdd" prot="public" virt="non-virtual"><scope>SODA</scope><name>turnOff</name></member>
      <member refid="class_s_o_d_a_1a17bd73a287665e022f8e955db65618b8" prot="public" virt="non-virtual"><scope>SODA</scope><name>updateTime</name></member>
      <member refid="class_s_o_d_a_1a5ef9772aba25fe5b19bc0d647d8c899a" prot="public" virt="non-virtual"><scope>SODA</scope><name>usbConnected</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
