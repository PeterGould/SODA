<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_s_o_d_a_8cpp" kind="file">
    <compoundname>SODA.cpp</compoundname>
    <includes local="yes">Arduino.h</includes>
    <includes local="no">EEPROM.h</includes>
    <includes refid="_s_o_d_a_8h" local="yes">SODA.h</includes>
    <includes local="no">SdFat.h</includes>
    <incdepgraph>
      <node id="4">
        <label>Wire.h</label>
      </node>
      <node id="5">
        <label>SdFat.h</label>
      </node>
      <node id="1">
        <label>Arduino.h</label>
      </node>
      <node id="2">
        <label>EEPROM.h</label>
      </node>
      <node id="3">
        <label>SODA.h</label>
        <link refid="_s_o_d_a_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="0">
        <label>C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp</label>
        <link refid="SODA.cpp"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_s_o_d_a_8cpp_1abb3fb3c13325b6f5206e79234aea8772" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char buffer[30]</definition>
        <argsstring>[30]</argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" line="10" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_s_o_d_a_8cpp_1a73b963945a418c57630c1b66ce2aa74f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int bufferIndex</definition>
        <argsstring></argsstring>
        <name>bufferIndex</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" line="11" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_s_o_d_a_8cpp_1ad45b8d02a7d624c8b45e91dea0b6bac7" prot="public" static="no" mutable="no">
        <type>SdFat</type>
        <definition>SdFat card</definition>
        <argsstring></argsstring>
        <name>card</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" line="6" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" prot="public" static="no" mutable="no">
        <type>SdFile</type>
        <definition>SdFile file</definition>
        <argsstring></argsstring>
        <name>file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" line="7" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_s_o_d_a_8cpp_1a194d3c4897cfa3ad9d8975be785d1b8f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int timeArray[6]</definition>
        <argsstring>[6]</argsstring>
        <name>timeArray</name>
        <initializer>= {2010,1,1,12,0,0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" line="9" column="1" bodyfile="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;Arduino.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EEPROM.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_o_d_a_8h" kindref="compound">SODA.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SdFat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_SD</highlight></codeline>
<codeline lineno="6"><highlight class="preprocessor"></highlight><highlight class="normal">SdFat<sp/><ref refid="_s_o_d_a_8cpp_1ad45b8d02a7d624c8b45e91dea0b6bac7" kindref="member">card</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal">SdFile<sp/><ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_o_d_a_8cpp_1a194d3c4897cfa3ad9d8975be785d1b8f" kindref="member">timeArray</ref>[6]<sp/>=<sp/>{2010,1,1,12,0,0};</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="_s_o_d_a_8cpp_1abb3fb3c13325b6f5206e79234aea8772" kindref="member">buffer</ref>[30];</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_o_d_a_8cpp_1a73b963945a418c57630c1b66ce2aa74f" kindref="member">bufferIndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//@I<sp/>SHARED<sp/>FUNCTIONS<sp/>//////////////////////////////////////////////////-</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight><highlight class="comment">//should<sp/>be<sp/>initiated<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>sketch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a95ec5e2456f6402478c101dad0b735ce" kindref="member">SODA::begin</ref>(){</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.begin();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>setAddress(<ref refid="_s_o_d_a_8h_1a3b1e1dd836f5aba79285b5eeafc2646b" kindref="member">CLOCK_I2C_ADDR</ref>,<sp/><ref refid="_s_o_d_a_8h_1a4fdccb47c51fb69f471233e966876bf6" kindref="member">CLOCK_CONTROL_ADDR</ref>,<sp/><ref refid="_s_o_d_a_8h_1aee2245fb4caf68f0fc571d8b24ff5626" kindref="member">CLOCK_SETUP</ref>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_o_d_a_1aa78eec946be2a371ae844fa44f6e4d96" kindref="member">setStandby</ref>(0x00);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//allow<sp/>SD<sp/>functions<sp/>to<sp/>be<sp/>removed<sp/>by<sp/>defining<sp/>NO_SD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_SD</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1ad45b8d02a7d624c8b45e91dea0b6bac7" kindref="member">card</ref>.begin(17,SPI_HALF_SPEED);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.open(<ref refid="_s_o_d_a_8h_1a8de29f7c8bbf1a81cc6e71ac602032d3" kindref="member">FILENAME</ref>,<sp/>O_CREAT<sp/>|<sp/>O_APPEND<sp/>|<sp/>O_WRITE<sp/>|<sp/>O_READ);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//@I<sp/>set<sp/>an<sp/>address<sp/>of<sp/>an<sp/>I2C<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SODA::setAddress(uint8_t<sp/>device,<sp/>uint8_t<sp/>addr,<sp/>uint8_t<sp/>val)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.beginTransmission(device);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.write(addr);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.write(val);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//get<sp/>an<sp/>address<sp/>of<sp/>a<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>SODA::getAddress(uint8_t<sp/>device,<sp/>uint8_t<sp/>addr)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rv;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.beginTransmission(device);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.write(addr);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.requestFrom(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(device),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(1));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>Wire.read();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//decimal<sp/>to<sp/>hex<sp/>and<sp/>reverse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SODA::dectobcd(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((val<sp/>/<sp/>10<sp/>*<sp/>16)<sp/>+<sp/>(val<sp/>%<sp/>10));</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SODA::bcdtodec(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((val<sp/>/<sp/>16<sp/>*<sp/>10)<sp/>+<sp/>(val<sp/>%<sp/>16));</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//print<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1af1e78fa91c8cb363a93320acaacf0e7f" kindref="member">SODA::printBuffer</ref>(){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(<ref refid="_s_o_d_a_8cpp_1abb3fb3c13325b6f5206e79234aea8772" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="comment">//@I<sp/>CLOCK<sp/>FUNCTIONS<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="comment"></highlight><highlight class="comment">//@I<sp/>Set<sp/>the<sp/>time<sp/>by<sp/>passing<sp/>values<sp/>from<sp/>the<sp/>array<sp/>to<sp/>the<sp/>clock<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a69b626b4dfd0847a1d9452ce8faba28e" kindref="member">SODA::setTime</ref>(){</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sYear;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>century;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>aTime;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_s_o_d_a_8cpp_1a194d3c4897cfa3ad9d8975be785d1b8f" kindref="member">timeArray</ref>[0]<sp/>&gt;<sp/>2000)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>century<sp/>=<sp/>0x80;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sYear<sp/>=<sp/><ref refid="_s_o_d_a_8cpp_1a194d3c4897cfa3ad9d8975be785d1b8f" kindref="member">timeArray</ref>[0]<sp/>-<sp/>2000;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>century<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sYear<sp/>=<sp/><ref refid="_s_o_d_a_8cpp_1a194d3c4897cfa3ad9d8975be785d1b8f" kindref="member">timeArray</ref>[0]<sp/>-<sp/>1900;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.beginTransmission(<ref refid="_s_o_d_a_8h_1a3b1e1dd836f5aba79285b5eeafc2646b" kindref="member">CLOCK_I2C_ADDR</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.write(<ref refid="_s_o_d_a_8h_1a7cc8eff3a86c4756ef854cf944a5dd5e" kindref="member">CLOCK_TIME_CAL_ADDR</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i&lt;=6)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==3){<sp/></highlight><highlight class="comment">//put<sp/>in<sp/>the<sp/>addition<sp/>byte<sp/>for<sp/>day<sp/>of<sp/>week</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aTime<sp/>=<sp/>0x01;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.write(aTime);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aTime<sp/>=<sp/>dectobcd(<ref refid="_s_o_d_a_8cpp_1a194d3c4897cfa3ad9d8975be785d1b8f" kindref="member">timeArray</ref>[5-i]);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==5)<sp/>aTime<sp/>=<sp/>dectobcd(sYear);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>4)<sp/>aTime<sp/>+=<sp/>century;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.write(aTime);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//loads<sp/>current<sp/>time<sp/>into<sp/>the<sp/>timeArray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a126e337a85ae2ff4380d738d8d55ed64" kindref="member">SODA::getTime</ref>(){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>century<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>year_full;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.beginTransmission(<ref refid="_s_o_d_a_8h_1a3b1e1dd836f5aba79285b5eeafc2646b" kindref="member">CLOCK_I2C_ADDR</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.write(<ref refid="_s_o_d_a_8h_1a7cc8eff3a86c4756ef854cf944a5dd5e" kindref="member">CLOCK_TIME_CAL_ADDR</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.requestFrom(<ref refid="_s_o_d_a_8h_1a3b1e1dd836f5aba79285b5eeafc2646b" kindref="member">CLOCK_I2C_ADDR</ref>,<sp/>7);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i&lt;6){</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==3){<sp/></highlight><highlight class="comment">//skip<sp/>over<sp/>day<sp/>of<sp/>week</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>Wire.read();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>Wire.read();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>century<sp/>=<sp/>(n<sp/>&amp;<sp/>0x80)<sp/>&gt;&gt;<sp/>7;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>n<sp/>&amp;<sp/>0x1F;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a194d3c4897cfa3ad9d8975be785d1b8f" kindref="member">timeArray</ref>[5-i]<sp/>=<sp/>bcdtodec(n);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==5){</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(century<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a194d3c4897cfa3ad9d8975be785d1b8f" kindref="member">timeArray</ref>[0]<sp/>=<sp/>2000<sp/>+<sp/><ref refid="_s_o_d_a_8cpp_1a194d3c4897cfa3ad9d8975be785d1b8f" kindref="member">timeArray</ref>[0];</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a194d3c4897cfa3ad9d8975be785d1b8f" kindref="member">timeArray</ref>[0]<sp/>=<sp/>1900<sp/>+<sp/><ref refid="_s_o_d_a_8cpp_1a194d3c4897cfa3ad9d8975be785d1b8f" kindref="member">timeArray</ref>[0];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_o_d_a_1a93c1adcc876e1681db69d992153ffb28" kindref="member">bufferTime</ref>();<sp/></highlight><highlight class="comment">//load<sp/>into<sp/>character<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//gets<sp/>current<sp/>time<sp/>and<sp/>loads<sp/>it<sp/>into<sp/>a<sp/>char<sp/>array;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//with<sp/>format<sp/>YYYY-MM-DD<sp/>HH:MM:SS;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a93c1adcc876e1681db69d992153ffb28" kindref="member">SODA::bufferTime</ref>(){</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spot<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>needed<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>spacers[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0000-00-00<sp/>00:00:00&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>6;<sp/>k++){</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buff2[4];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itoa(<ref refid="_s_o_d_a_8cpp_1a194d3c4897cfa3ad9d8975be785d1b8f" kindref="member">timeArray</ref>[k],buff2,10);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_o_d_a_8cpp_1a194d3c4897cfa3ad9d8975be785d1b8f" kindref="member">timeArray</ref>[k]<sp/>&lt;<sp/>10){</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spot++;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needed<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(k==0)<sp/>needed<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>needed;<sp/>i++){</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacers[spot]<sp/>=<sp/>buff2[i];</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spot++;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spot++;<sp/></highlight><highlight class="comment">//space<sp/>between<sp/>each<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//end<sp/>loop<sp/>through<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>load<sp/>into<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k&lt;19;<sp/>k++){</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1abb3fb3c13325b6f5206e79234aea8772" kindref="member">buffer</ref>[k]<sp/>=<sp/>spacers[k];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}<sp/></highlight><highlight class="comment">//end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//Set<sp/>clock<sp/>using<sp/>input<sp/>from<sp/>the<sp/>serial<sp/>monitor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1abac684bb54a9d346337b6e0ed9243e40" kindref="member">SODA::serialSetTime</ref>(){</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//expects<sp/>19=character<sp/>format<sp/>YYYY-MM-DD<sp/>HH:MM:SS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_o_d_a_8cpp_1a73b963945a418c57630c1b66ce2aa74f" kindref="member">bufferIndex</ref>&lt;19)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//coarse<sp/>filter<sp/>for<sp/>malformed<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a73b963945a418c57630c1b66ce2aa74f" kindref="member">bufferIndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>6;<sp/>k++){</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>need<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(k==0)<sp/>need<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp[need];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>need;<sp/>i++){<sp/></highlight><highlight class="comment">//read<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp[i]<sp/>=<sp/><ref refid="_s_o_d_a_8cpp_1abb3fb3c13325b6f5206e79234aea8772" kindref="member">buffer</ref>[<ref refid="_s_o_d_a_8cpp_1a73b963945a418c57630c1b66ce2aa74f" kindref="member">bufferIndex</ref>];</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a73b963945a418c57630c1b66ce2aa74f" kindref="member">bufferIndex</ref>++;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a194d3c4897cfa3ad9d8975be785d1b8f" kindref="member">timeArray</ref>[k]<sp/>=<sp/>atoi(temp);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(k<sp/>&lt;<sp/>5)<sp/>temp[0]<sp/>=<sp/><ref refid="_s_o_d_a_8cpp_1a73b963945a418c57630c1b66ce2aa74f" kindref="member">bufferIndex</ref>++;<sp/></highlight><highlight class="comment">//read<sp/>spacing<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//end<sp/>loop<sp/>through<sp/>time<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_o_d_a_1a69b626b4dfd0847a1d9452ce8faba28e" kindref="member">setTime</ref>();<sp/></highlight><highlight class="comment">//set<sp/>the<sp/>time<sp/>using<sp/>the<sp/>current<sp/>time<sp/>array;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_o_d_a_1a126e337a85ae2ff4380d738d8d55ed64" kindref="member">getTime</ref>();<sp/></highlight><highlight class="comment">//reload<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_o_d_a_1af1e78fa91c8cb363a93320acaacf0e7f" kindref="member">printBuffer</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>the<sp/>values<sp/>in<sp/>the<sp/>clock<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a17bd73a287665e022f8e955db65618b8" kindref="member">SODA::updateTime</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>place){</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(place<sp/>&gt;<sp/>5)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//only<sp/>6<sp/>places</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a194d3c4897cfa3ad9d8975be785d1b8f" kindref="member">timeArray</ref>[place]<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//retrieve<sp/>values<sp/>from<sp/>clock<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a9cca81f7fda16982cc1eb4030774425b" kindref="member">SODA::checkTime</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>place){</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(place&gt;5)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="_s_o_d_a_8cpp_1a194d3c4897cfa3ad9d8975be785d1b8f" kindref="member">timeArray</ref>[place]);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//get<sp/>temperature<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1abce8c3a638c71d842ab79af3120138c5" kindref="member">SODA::getClockTemp</ref>()</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp_msb,<sp/>temp_lsb;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>nint;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>setAddress(<ref refid="_s_o_d_a_8h_1a3b1e1dd836f5aba79285b5eeafc2646b" kindref="member">CLOCK_I2C_ADDR</ref>,<ref refid="_s_o_d_a_8h_1a4fdccb47c51fb69f471233e966876bf6" kindref="member">CLOCK_CONTROL_ADDR</ref>,<ref refid="_s_o_d_a_8h_1aee2245fb4caf68f0fc571d8b24ff5626" kindref="member">CLOCK_SETUP</ref><sp/>|<sp/>0x20);<sp/></highlight><highlight class="comment">//updates<sp/>temp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.beginTransmission(<ref refid="_s_o_d_a_8h_1a3b1e1dd836f5aba79285b5eeafc2646b" kindref="member">CLOCK_I2C_ADDR</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.write(<ref refid="_s_o_d_a_8h_1a9a34706a5bd72f4ceb62ac812b535c90" kindref="member">CLOCK_TEMPERATURE_ADDR</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.requestFrom(<ref refid="_s_o_d_a_8h_1a3b1e1dd836f5aba79285b5eeafc2646b" kindref="member">CLOCK_I2C_ADDR</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_msb<sp/>=<sp/>Wire.read();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_lsb<sp/>=<sp/>Wire.read()<sp/>&gt;&gt;<sp/>6;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((temp_msb<sp/>&amp;<sp/>0x80)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nint<sp/>=<sp/>temp_msb<sp/>|<sp/>~((1<sp/>&lt;&lt;<sp/>8)<sp/>-<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>negative<sp/>get<sp/>two&apos;s<sp/>complement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nint<sp/>=<sp/>temp_msb;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>0.25<sp/>*<sp/>temp_lsb<sp/>+<sp/>nint;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a6acf21ab1e6db2b8861715e8a5a7f37f" kindref="member">SODA::setWake</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valType){</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//valType:<sp/>1=<sp/>secs,<sp/>2<sp/>=<sp/>mins,<sp/>3=hours</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>valType--;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_o_d_a_1a126e337a85ae2ff4380d738d8d55ed64" kindref="member">getTime</ref>();<sp/></highlight><highlight class="comment">//load<sp/>current<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>current<sp/>=<sp/>getAddress(<ref refid="_s_o_d_a_8h_1a3b1e1dd836f5aba79285b5eeafc2646b" kindref="member">CLOCK_I2C_ADDR</ref>,<ref refid="_s_o_d_a_8h_1a4fdccb47c51fb69f471233e966876bf6" kindref="member">CLOCK_CONTROL_ADDR</ref>);<sp/></highlight><highlight class="comment">//load<sp/>current<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>current<sp/>=<sp/>current<sp/>|<sp/>0x05;<sp/><sp/></highlight><highlight class="comment">//make<sp/>sure<sp/>alarm1<sp/>bits<sp/>are<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>setAddress(<ref refid="_s_o_d_a_8h_1a3b1e1dd836f5aba79285b5eeafc2646b" kindref="member">CLOCK_I2C_ADDR</ref>,<ref refid="_s_o_d_a_8h_1a4fdccb47c51fb69f471233e966876bf6" kindref="member">CLOCK_CONTROL_ADDR</ref>,current);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>times[3]<sp/>=<sp/>{<ref refid="_s_o_d_a_8cpp_1a194d3c4897cfa3ad9d8975be785d1b8f" kindref="member">timeArray</ref>[5],<ref refid="_s_o_d_a_8cpp_1a194d3c4897cfa3ad9d8975be785d1b8f" kindref="member">timeArray</ref>[4],timeArray[3]};<sp/></highlight><highlight class="comment">//load<sp/>current<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++){</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&lt;valType)<sp/>times[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==valType){</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next1<sp/>=<sp/>times[i]<sp/>%<sp/>val;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next1<sp/>=<sp/>val<sp/>-<sp/>next1;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>times[i]+=<sp/>next1;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&lt;2<sp/>&amp;&amp;<sp/>times[i]<sp/>&gt;=<sp/>60){<sp/></highlight><highlight class="comment">//push<sp/>into<sp/>next<sp/>increment<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>times[i+1]<sp/>=<sp/>times[i+1]<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>times[i]-=60;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==2<sp/>&amp;<sp/>times[i]<sp/>&gt;=<sp/>24)<sp/>times[i]-=<sp/>24;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>load<sp/>values<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.beginTransmission(<ref refid="_s_o_d_a_8h_1a3b1e1dd836f5aba79285b5eeafc2646b" kindref="member">CLOCK_I2C_ADDR</ref>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.write(<ref refid="_s_o_d_a_8h_1aad01f535e631d4f939e8cdf5fab46b3f" kindref="member">CLOCK_ALARM1_ADDR</ref>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.write(0x80);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.write(dectobcd(times[i])<sp/>&amp;<sp/>0x7f);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_o_d_a_1a98719fd95cb6fd3c70f221e62dbf06f4" kindref="member">getStandby</ref>()<sp/>==<sp/>0x01){</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_o_d_a_1aa78eec946be2a371ae844fa44f6e4d96" kindref="member">setStandby</ref>(0x00);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_o_d_a_1a135382c3d907496f74c852965b31ffdd" kindref="member">turnOff</ref>();<sp/><sp/></highlight><highlight class="comment">//doesn&apos;t<sp/>continue<sp/>if<sp/>it<sp/>was<sp/>on<sp/>standby<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//turn<sp/>off<sp/>the<sp/>alarm1<sp/>flag,<sp/>thereby<sp/>going<sp/>to<sp/>sleep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a135382c3d907496f74c852965b31ffdd" kindref="member">SODA::turnOff</ref>(){</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_o_d_a_1a98719fd95cb6fd3c70f221e62dbf06f4" kindref="member">getStandby</ref>()<sp/>!=<sp/>0x00)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//no<sp/>need<sp/>to<sp/>go<sp/>through<sp/>sleep<sp/>process<sp/>since<sp/>it<sp/>should<sp/>be<sp/>turned<sp/>off<sp/>next<sp/>sleep<sp/>cycle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>current<sp/>=<sp/>getAddress(<ref refid="_s_o_d_a_8h_1a3b1e1dd836f5aba79285b5eeafc2646b" kindref="member">CLOCK_I2C_ADDR</ref>,<ref refid="_s_o_d_a_8h_1a5b32a211a54e92457ebf5ebba13302be" kindref="member">CLOCK_ALARM_STATUS</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>current<sp/>=<sp/>current<sp/>&amp;<sp/>0xFE;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>setAddress(<ref refid="_s_o_d_a_8h_1a3b1e1dd836f5aba79285b5eeafc2646b" kindref="member">CLOCK_I2C_ADDR</ref>,<ref refid="_s_o_d_a_8h_1a5b32a211a54e92457ebf5ebba13302be" kindref="member">CLOCK_ALARM_STATUS</ref>,current);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(1000);<sp/><sp/></highlight><highlight class="comment">//just<sp/>stay<sp/>here<sp/>until<sp/>process<sp/>turned<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>and<sp/>get<sp/>standby</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1aa78eec946be2a371ae844fa44f6e4d96" kindref="member">SODA::setStandby</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val){<sp/></highlight><highlight class="comment">//forces<sp/>the<sp/>clock<sp/>to<sp/>alarm<sp/>every<sp/>second<sp/>or<sp/>removes<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>standby<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(standby<sp/>&lt;<sp/>0x01)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_SD</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.isOpen())<sp/><ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.close();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fill<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(standby<sp/>!=<sp/>0x00)<sp/>fill<sp/>=<sp/>0x80;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.beginTransmission(<ref refid="_s_o_d_a_8h_1a3b1e1dd836f5aba79285b5eeafc2646b" kindref="member">CLOCK_I2C_ADDR</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.write(<ref refid="_s_o_d_a_8h_1aad01f535e631d4f939e8cdf5fab46b3f" kindref="member">CLOCK_ALARM1_ADDR</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.write(fill);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>current<sp/>=<sp/>getAddress(<ref refid="_s_o_d_a_8h_1a3b1e1dd836f5aba79285b5eeafc2646b" kindref="member">CLOCK_I2C_ADDR</ref>,<ref refid="_s_o_d_a_8h_1a4fdccb47c51fb69f471233e966876bf6" kindref="member">CLOCK_CONTROL_ADDR</ref>);<sp/></highlight><highlight class="comment">//load<sp/>current<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>current<sp/>=<sp/>current<sp/>|<sp/>0x05;<sp/><sp/></highlight><highlight class="comment">//make<sp/>sure<sp/>alarm1<sp/>bits<sp/>are<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>setAddress(<ref refid="_s_o_d_a_8h_1a3b1e1dd836f5aba79285b5eeafc2646b" kindref="member">CLOCK_I2C_ADDR</ref>,<ref refid="_s_o_d_a_8h_1a4fdccb47c51fb69f471233e966876bf6" kindref="member">CLOCK_CONTROL_ADDR</ref>,current);</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a98719fd95cb6fd3c70f221e62dbf06f4" kindref="member">SODA::getStandby</ref>(){</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>standby;</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="comment">//@I<sp/>END<sp/>CLOCK<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="287"><highlight class="comment"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="289"><highlight class="comment"></highlight><highlight class="comment">//<sp/>ADC<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="291"><highlight class="comment"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a30b86308dcb295c5e86b79049d3bafdd" kindref="member">SODA::adcRead</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gain){</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>set1<sp/>=<sp/><ref refid="_s_o_d_a_8h_1ad06cb9e5985bd216a376f26f22303cd6" kindref="member">ADC_BASE</ref>;<sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>reading<sp/>=<sp/>0x00000000;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bitVal;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>vref<sp/>=<sp/>2048000000;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>getBytes[4]<sp/>=<sp/>{0x00,<sp/>0x00,<sp/>0x00,0x00};</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ch<sp/>&gt;<sp/>4<sp/>||<sp/>ch<sp/>&lt;<sp/>1<sp/>||<sp/>bit<sp/>&lt;<sp/>1<sp/>||<sp/>bit<sp/>&gt;<sp/>4<sp/>||<sp/>gain<sp/>&lt;<sp/>1<sp/>||<sp/>gain<sp/>&gt;<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-999L);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//build<sp/>the<sp/>control<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chs[4]<sp/>=<sp/>{<ref refid="_s_o_d_a_8h_1a7d351ed34ca3ff55d1681ee84a243090" kindref="member">ADC_CH1</ref>,<ref refid="_s_o_d_a_8h_1a2bb0c1b2de3aa355244417d9a42a8966" kindref="member">ADC_CH2</ref>,<ref refid="_s_o_d_a_8h_1a6ae98bab335f9d073a58d70e7ba4f844" kindref="member">ADC_CH3</ref>,<ref refid="_s_o_d_a_8h_1a3648bb19b5c3735452fee16c835afc43" kindref="member">ADC_CH4</ref>};</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>bits[4]<sp/>=<sp/>{<ref refid="_s_o_d_a_8h_1a9d2226f7e9458be9bba7d1f1a835ad27" kindref="member">ADC_12BITS</ref>,<sp/><ref refid="_s_o_d_a_8h_1ace4f2485b30601e649bc200a7409c279" kindref="member">ADC_14BITS</ref>,<sp/><ref refid="_s_o_d_a_8h_1a65b5afbf078fe48183764d3426f22031" kindref="member">ADC_16BITS</ref>,<sp/><ref refid="_s_o_d_a_8h_1a6d9b75963c39815fce95a22afd8feb37" kindref="member">ADC_18BITS</ref>};</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>gains[4]<sp/>=<sp/>{<ref refid="_s_o_d_a_8h_1a1b52f2072afbd743fdd52446aa79d66c" kindref="member">ADC_GAIN1</ref>,<sp/><ref refid="_s_o_d_a_8h_1ad3379317af1d519878ad3482cf683573" kindref="member">ADC_GAIN2</ref>,<sp/><ref refid="_s_o_d_a_8h_1ae2ec8017a25a09268c290a642bd9b933" kindref="member">ADC_GAIN4</ref>,<sp/><ref refid="_s_o_d_a_8h_1af3b1171580b71ded9663cb45e463d378" kindref="member">ADC_GAIN8</ref>};</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sampleBits[4]<sp/>=<sp/>{0x0B,0x0D,0x0F,0x11};</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>set1<sp/>=<sp/>(<ref refid="_s_o_d_a_8h_1ad06cb9e5985bd216a376f26f22303cd6" kindref="member">ADC_BASE</ref><sp/>|<sp/>chs[ch-1]<sp/>|<sp/>bits[bit-1]<sp/>|<sp/>gains[gain-1]);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.beginTransmission(<ref refid="_s_o_d_a_8h_1a5fd3aabe18504a5314a5d0e71e3bc495" kindref="member">ADC_I2C_ADDR</ref>);<sp/></highlight><highlight class="comment">//set<sp/>control<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.write(set1);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>now<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bit==4)<sp/>j<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((now<sp/>+<sp/>500L)<sp/>&gt;<sp/>millis()){<sp/></highlight><highlight class="comment">//allow<sp/>up<sp/>to<sp/>500<sp/>ms<sp/>to<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.requestFrom(<ref refid="_s_o_d_a_8h_1a5fd3aabe18504a5314a5d0e71e3bc495" kindref="member">ADC_I2C_ADDR</ref>,(5-j));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>j;<sp/>k&lt;4;<sp/>k++){</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getBytes[k]<sp/>=<sp/>Wire.read();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>configByte<sp/>=<sp/>Wire.read();<sp/></highlight><highlight class="comment">//look<sp/>for<sp/>the<sp/>control<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(configByte<sp/>&amp;<sp/>0x80))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>break<sp/>loop<sp/>if<sp/>new<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//end<sp/>wait<sp/>for<sp/>conversion<sp/>or<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//extend<sp/>sign<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>getBytes[0]<sp/>=<sp/>getBytes[j]<sp/>&amp;<sp/>0X80<sp/>?<sp/>0XFF<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j==2)<sp/>getBytes[1]<sp/>=<sp/><sp/>getBytes[j]<sp/>&amp;<sp/>0X80<sp/>?<sp/>0XFF<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//assemble<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>reading<sp/>=<sp/>long(getBytes[0])&lt;&lt;24;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>1;<sp/>p&lt;4;<sp/>p++){</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shift<sp/>=<sp/>8*(3-p);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reading<sp/>=<sp/>reading<sp/>|<sp/>(long(getBytes[p])<sp/>&lt;&lt;<sp/>shift);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//convert<sp/>to<sp/>volt<sp/>x<sp/>10**9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>vref<sp/>=<sp/>vref<sp/>&gt;&gt;<sp/>sampleBits[bit-1];</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>vref<sp/>=<sp/>vref<sp/>&gt;&gt;<sp/>(gain<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>reading<sp/>=<sp/>reading<sp/>*<sp/>vref;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(reading);</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//read<sp/>thermocouple<sp/>and<sp/>return<sp/>temperature<sp/>in<sp/>degrees<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a1f1aa095370775ed2d94ca6d842ff213" kindref="member">SODA::tcReadK</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch){</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//break<sp/>points<sp/>for<sp/>the<sp/>uV<sp/>to<sp/>C<sp/>and<sp/>C<sp/>to<sp/>uV<sp/>equations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>breakuV[3]<sp/>=<sp/>{-5800,0,37000};</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>breakC[3]<sp/>=<sp/>{-125,0,670};</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//coefficients<sp/>for<sp/>the<sp/>uV<sp/>to<sp/>C*10**4<sp/>equation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>a0[4]<sp/>=<sp/>{729905,4341,17619,1572949};</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>a1[4]<sp/>=<sp/>{<sp/>344,202,186,125};</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>a2[4]<sp/>=<sp/>{-66,-3873,-155,366};</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//coefficients<sp/>for<sp/>the<sp/>C<sp/>to<sp/>uV<sp/>equations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>b0[4]<sp/>=<sp/>{934459,10309,-88285,-11510582};</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>b1[4]<sp/>=<sp/>{65986,51452,53746,78962};</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>b2[4]<sp/>=<sp/>{875,406,21,-76};</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>refPV<sp/>=<sp/>long(<ref refid="class_s_o_d_a_1abce8c3a638c71d842ab79af3120138c5" kindref="member">getClockTemp</ref>());</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentuV<sp/>=<sp/><ref refid="class_s_o_d_a_1a30b86308dcb295c5e86b79049d3bafdd" kindref="member">adcRead</ref>(1,4,4)/1000L;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//figure<sp/>out<sp/>which<sp/>segment<sp/>to<sp/>use<sp/>for<sp/>temp<sp/>to<sp/>uV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>3;<sp/>k++){</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(refPV<sp/>&gt;<sp/>breakC[k])<sp/>seg++;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>refPV<sp/>=<sp/>(b0[seg]<sp/>+<sp/>b1[seg]*refPV<sp/>+<sp/>b2[seg]*refPV*refPV)/1000;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>currentuV<sp/>=<sp/>currentuV<sp/>+<sp/>refPV;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//figure<sp/>out<sp/>which<sp/>segment<sp/>to<sp/>use<sp/>for<sp/>uv<sp/>to<sp/>temp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>seg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>3;<sp/>k++){</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentuV<sp/>&gt;<sp/>breakuV[k])<sp/>seg++;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>currentuV<sp/>=<sp/>(a0[seg]<sp/>+<sp/>a1[seg]*currentuV<sp/>+<sp/>a2[seg]*(currentuV/1000L)*(currentuV/1000L));</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>currentuV<sp/>=<sp/>currentuV/10000L;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(currentuV));</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//Average<sp/>analogRead<sp/>across<sp/>5<sp/>measurements<sp/>to<sp/>reduce<sp/>noise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a55eaa23fbeb729b6d348a0d6c4e3c9b3" kindref="member">SODA::smoothAnalogRead</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pin1){</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>allRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dump<sp/>first<sp/>reading;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>allRead<sp/>=<sp/>analogRead(pin1);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(10);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>allRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;5;<sp/>k++){</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allRead+=<sp/>analogRead(pin1);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(5);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>allRead<sp/>=<sp/>allRead/5;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(allRead);</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="comment">//@I<sp/>SD<sp/>Card<sp/>Functions</highlight></codeline>
<codeline lineno="383"><highlight class="comment"></highlight><highlight class="comment">//run<sp/>the<sp/>SD<sp/>card</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a8cd44297bace9494ed073fec5ebfe13a" kindref="member">SODA::dataLineBegin</ref>(){</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_o_d_a_1a126e337a85ae2ff4380d738d8d55ed64" kindref="member">getTime</ref>();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ID<sp/>=<sp/><ref refid="class_s_o_d_a_1a01ecfd6c2f14d0f5507a4384b34fb46a" kindref="member">getID</ref>();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_SD</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_s_o_d_a_8h_1a2b3671e090b0831bfba7d12cfcf2d481" kindref="member">LEDPIN</ref>,HIGH);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.isOpen())<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.print(ID);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.print(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.print(<ref refid="_s_o_d_a_8cpp_1abb3fb3c13325b6f5206e79234aea8772" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="396"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(ID);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(<ref refid="_s_o_d_a_8cpp_1abb3fb3c13325b6f5206e79234aea8772" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">//Write<sp/>and<sp/>Int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a00647a29fb7b491d5e455b8b099da5e0" kindref="member">SODA::dataLineAdd</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value){</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_SD</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.isOpen())<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.print(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.print(value);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="409"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(value);</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">//Write<sp/>a<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a00647a29fb7b491d5e455b8b099da5e0" kindref="member">SODA::dataLineAdd</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value){</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_SD</highlight></codeline>
<codeline lineno="416"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.isOpen())<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.print(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.print(value);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(value);</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">//write<sp/>a<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a00647a29fb7b491d5e455b8b099da5e0" kindref="member">SODA::dataLineAdd</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value){</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_SD</highlight></codeline>
<codeline lineno="429"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.isOpen())<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.print(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.print(value);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="435"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(value);</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a3bdf9101301e2781fe899cb52a59820b" kindref="member">SODA::dataLineEnd</ref>(){</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_SD</highlight></codeline>
<codeline lineno="441"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.isOpen())<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.print(</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//end<sp/>of<sp/>a<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.sync();<sp/><sp/></highlight><highlight class="comment">//make<sp/>sure<sp/>the<sp/>file<sp/>is<sp/>updated<sp/>before<sp/>closing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.close();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_s_o_d_a_8h_1a2b3671e090b0831bfba7d12cfcf2d481" kindref="member">LEDPIN</ref>,LOW);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(200);<sp/></highlight><highlight class="comment">//give<sp/>SD<sp/>card<sp/>some<sp/>time<sp/>to<sp/>finish<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="450"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//end<sp/>of<sp/>a<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_s_o_d_a_8h_1a2b3671e090b0831bfba7d12cfcf2d481" kindref="member">LEDPIN</ref>,LOW);</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a6a65882362bba508fbc8c0d5e45badc1" kindref="member">SODA::dataDownload</ref>(){</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_SD</highlight></codeline>
<codeline lineno="456"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.isOpen())<sp/><ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.open(<ref refid="_s_o_d_a_8h_1a8de29f7c8bbf1a81cc6e71ac602032d3" kindref="member">FILENAME</ref>,<sp/>O_CREAT<sp/>|<sp/>O_APPEND<sp/>|<sp/>O_WRITE<sp/>|<sp/>O_READ);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nBytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((data<sp/>=<sp/><ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.read())<sp/>&gt;=<sp/>0)<sp/>Serial.print(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">(data));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a31c2191bba86f51dee529f998dd5e764" kindref="member">file</ref>.close();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(100);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="463"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="comment">//<sp/>@I<sp/>Communication<sp/>Functions</highlight></codeline>
<codeline lineno="469"><highlight class="comment"></highlight><highlight class="comment">//<sp/>command<sp/>format<sp/>=<sp/>&quot;[cXXXXXXXXX]&quot;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">//where<sp/>[,]<sp/>indicate<sp/>beginning<sp/>and<sp/>end<sp/>of<sp/>a<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">//c<sp/>=<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="comment">//XXXXXXXXX<sp/>=<sp/>auxillary<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a15a8c710209fd041f14bb448fd17c9b2" kindref="member">SODA::communicate</ref>(){<sp/><sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>aChar<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>command<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_s_o_d_a_1a5ef9772aba25fe5b19bc0d647d8c899a" kindref="member">usbConnected</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_o_d_a_1a98719fd95cb6fd3c70f221e62dbf06f4" kindref="member">getStandby</ref>()==0x02)<sp/>Serial.print(</highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//indicates<sp/>that<sp/>a<sp/>reading<sp/>was<sp/>made.<sp/>This<sp/>character<sp/>ends<sp/>the<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_o_d_a_1a98719fd95cb6fd3c70f221e62dbf06f4" kindref="member">getStandby</ref>()<sp/>!=<sp/>0x01)<sp/><ref refid="class_s_o_d_a_1aa78eec946be2a371ae844fa44f6e4d96" kindref="member">setStandby</ref>(0x01);<sp/><sp/></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="class_s_o_d_a_1a5ef9772aba25fe5b19bc0d647d8c899a" kindref="member">usbConnected</ref>()<sp/>){</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(Serial.available()<sp/>&amp;&amp;<sp/>aChar<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aChar<sp/>=<sp/>Serial.read();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(aChar==</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">){<sp/></highlight><highlight class="comment">//begin<sp/>a<sp/>new<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>=<sp/>Serial.read();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a73b963945a418c57630c1b66ce2aa74f" kindref="member">bufferIndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(aChar==</highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1abb3fb3c13325b6f5206e79234aea8772" kindref="member">buffer</ref>[<ref refid="_s_o_d_a_8cpp_1a73b963945a418c57630c1b66ce2aa74f" kindref="member">bufferIndex</ref>]<sp/>=<sp/>aChar;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_o_d_a_8cpp_1a73b963945a418c57630c1b66ce2aa74f" kindref="member">bufferIndex</ref>++;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_o_d_a_8cpp_1a73b963945a418c57630c1b66ce2aa74f" kindref="member">bufferIndex</ref>&gt;19)<sp/><ref refid="_s_o_d_a_8cpp_1a73b963945a418c57630c1b66ce2aa74f" kindref="member">bufferIndex</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//don&apos;t<sp/>overrun<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(5);<sp/></highlight><highlight class="comment">//wait<sp/>for<sp/>more<sp/>chars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(command!=</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(command<sp/>==<sp/></highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_o_d_a_1aa78eec946be2a371ae844fa44f6e4d96" kindref="member">setStandby</ref>(0x02);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;[R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//allows<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>sketch<sp/>to<sp/>run;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseCommand(command);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aChar<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SODA::parseCommand(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>command){</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(command);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(command)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_o_d_a_1abac684bb54a9d346337b6e0ed9243e40" kindref="member">serialSetTime</ref>();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_o_d_a_1a126e337a85ae2ff4380d738d8d55ed64" kindref="member">getTime</ref>();<sp/></highlight><highlight class="comment">//reload<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_o_d_a_1af1e78fa91c8cb363a93320acaacf0e7f" kindref="member">printBuffer</ref>();</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(<ref refid="class_s_o_d_a_1a01ecfd6c2f14d0f5507a4384b34fb46a" kindref="member">getID</ref>());</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//don&apos;t<sp/>change<sp/>this<sp/>to<sp/>println.<sp/><sp/>The<sp/>CRLF<sp/>will<sp/>mess<sp/>things<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_o_d_a_1a6a65882362bba508fbc8c0d5e45badc1" kindref="member">dataDownload</ref>();</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>is<sp/>optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="comment">//@I<sp/>MISC<sp/>FUNCTION<sp/><sp/></highlight></codeline>
<codeline lineno="533"><highlight class="comment"></highlight><highlight class="comment">//set<sp/>an<sp/>identifer<sp/>for<sp/>the<sp/>board<sp/>as<sp/>a<sp/>long<sp/>in<sp/>non-volatile<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1aa79b275be71dbfd5662608add4715b87" kindref="member">SODA::setID</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ID){</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*p<sp/>=<sp/>(uint8_t<sp/>*)&amp;ID;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k&lt;4;<sp/>k++){</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EEPROM.write(k,p[k]);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a01ecfd6c2f14d0f5507a4384b34fb46a" kindref="member">SODA::getID</ref>(){</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ID;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*p<sp/>=<sp/>(uint8_t<sp/>*)&amp;ID;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k&lt;4;<sp/>k++){</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[k]<sp/>=<sp/>EEPROM.read(k);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ID;</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="comment">//test<sp/>to<sp/>see<sp/>if<sp/>the<sp/>usb<sp/>is<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1a5ef9772aba25fe5b19bc0d647d8c899a" kindref="member">SODA::usbConnected</ref>(){</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(digitalRead(0));</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="comment">//blink<sp/>LED<sp/>n<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_d_a_1af1752112fc06931fa9634f48cf65e420" kindref="member">SODA::blinks</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n){</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(<ref refid="_s_o_d_a_8h_1a2b3671e090b0831bfba7d12cfcf2d481" kindref="member">LEDPIN</ref>,OUTPUT);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++){</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_s_o_d_a_8h_1a2b3671e090b0831bfba7d12cfcf2d481" kindref="member">LEDPIN</ref>,HIGH);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(100);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_s_o_d_a_8h_1a2b3671e090b0831bfba7d12cfcf2d481" kindref="member">LEDPIN</ref>,LOW);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(100);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(<ref refid="_s_o_d_a_8h_1a2b3671e090b0831bfba7d12cfcf2d481" kindref="member">LEDPIN</ref>,INPUT);</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Peter/Documents/Arduino/libraries/SODA/SODA.cpp"/>
  </compounddef>
</doxygen>
